services:
  init:
    image: alpine
    entrypoint: install -d -o ${NAS_UID:?} -g ${NAS_GID:?} -m 770
    volumes:
      - ${PATH_TO_MEDIA:?}:/tmp/media
    command:
      - /tmp/media/movies
      - /tmp/media/tv
      - /tmp/media/music
      - /tmp/media/downloads

  # https://github.com/linuxserver/docker-radarr/pkgs/container/radarr
  radarr:
    image: ghcr.io/linuxserver/radarr:5.22.4
    container_name: servarr_radarr
    restart: unless-stopped
    networks:
      - proxy
    environment:
      PUID: ${NAS_UID:?}
      PGID: ${NAS_GID:?}
      TZ: ${TZ:?}
    volumes:
      - ${PATH_TO_ROOT:?}/servarr/radarr:/config
      - ${PATH_TO_MEDIA:?}:/data
    labels:
      traefik.enable: true
      traefik.http.routers.radarr.entrypoints: local-secure
      traefik.http.routers.radarr.rule: Host(`radarr.${ROOT_DOMAIN:?}`)
      traefik.http.services.radarr.loadbalancer.server.port: 7878
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
    depends_on:
      init:
        condition: service_completed_successfully
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started

  # https://github.com/linuxserver/docker-sonarr/pkgs/container/sonarr
  sonarr:
    image: ghcr.io/linuxserver/sonarr:4.0.14
    container_name: servarr_sonarr
    restart: unless-stopped
    networks:
      - proxy
    environment:
      PUID: ${NAS_UID:?}
      PGID: ${NAS_GID:?}
      TZ: ${TZ:?}
    volumes:
      - ${PATH_TO_ROOT:?}/servarr/sonarr:/config
      - ${PATH_TO_MEDIA:?}:/data
    labels:
      traefik.enable: true
      traefik.http.routers.sonarr.entrypoints: local-secure
      traefik.http.routers.sonarr.rule: Host(`sonarr.${ROOT_DOMAIN:?}`)
      traefik.http.services.sonarr.loadbalancer.server.port: 8989
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
    depends_on:
      init:
        condition: service_completed_successfully
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started

  # https://github.com/linuxserver/docker-lidarr/pkgs/container/lidarr
  lidarr:
    image: ghcr.io/linuxserver/lidarr:2.11.2
    container_name: servarr_lidarr
    restart: unless-stopped
    networks:
      - proxy
    environment:
      PUID: ${NAS_UID:?}
      PGID: ${NAS_GID:?}
      TZ: ${TZ:?}
    volumes:
      - ${PATH_TO_ROOT:?}/servarr/lidarr:/config
      - ${PATH_TO_MEDIA:?}:/data
    labels:
      traefik.enable: true
      traefik.http.routers.lidarr.entrypoints: local-secure
      traefik.http.routers.lidarr.rule: Host(`lidarr.${ROOT_DOMAIN:?}`)
      traefik.http.services.lidarr.loadbalancer.server.port: 8686
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
      wud.tag.exclude: ^8.1.2135$$
    depends_on:
      init:
        condition: service_completed_successfully
      prowlarr:
        condition: service_started
      qbittorrent:
        condition: service_started

  # https://github.com/linuxserver/docker-prowlarr/pkgs/container/prowlarr
  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:1.35.1
    container_name: servarr_prowlarr
    restart: unless-stopped
    networks:
      - proxy
    environment:
      PUID: ${NAS_UID:?}
      PGID: ${NAS_GID:?}
      TZ: ${TZ:?}
    volumes:
      - ${PATH_TO_ROOT:?}/servarr/prowlarr:/config
    labels:
      traefik.enable: true
      traefik.http.routers.prowlarr.entrypoints: local-secure
      traefik.http.routers.prowlarr.rule: Host(`prowlarr.${ROOT_DOMAIN:?}`)
      traefik.http.services.prowlarr.loadbalancer.server.port: 9696
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$

  # https://github.com/linuxserver/docker-qbittorrent/pkgs/container/qbittorrent
  # https://github.com/vuetorrent/VueTorrent/pkgs/container/vuetorrent-lsio-mod
  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:5.1.0
    container_name: servarr_qbittorrent
    restart: unless-stopped
    networks:
      - proxy
    environment:
      PUID: ${NAS_UID:?}
      PGID: ${NAS_GID:?}
      TZ: ${TZ:?}
      WEBUI_PORT: 8080
      DOCKER_MODS: ghcr.io/vuetorrent/vuetorrent-lsio-mod:2.24.2
    volumes:
      - ${PATH_TO_ROOT:?}/servarr/qbittorrent:/config
      - ${PATH_TO_MEDIA:?}/downloads:/data/downloads
    labels:
      traefik.enable: true
      traefik.http.routers.qbittorrent.entrypoints: local-secure
      traefik.http.routers.qbittorrent.rule: Host(`qbittorrent.${ROOT_DOMAIN:?}`)
      traefik.http.services.qbittorrent.loadbalancer.server.port: 8080
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
      wud.tag.exclude: ^20.04.1|14.3.9$$
    depends_on:
      init:
        condition: service_completed_successfully

networks:
  proxy:
    external: true
