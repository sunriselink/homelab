services:
  init:
    image: alpine
    entrypoint: install -d -o ${NAS_UID:?} -g ${NAS_GID:?} -m 770
    volumes:
      - ./:/tmp/monitoring
    command:
      - /tmp/monitoring/grafana/data
      - /tmp/monitoring/influxdb
      - /tmp/monitoring/influxdb/data
      - /tmp/monitoring/influxdb/config

  # https://hub.docker.com/r/grafana/grafana/tags
  # https://github.com/grafana/grafana/releases
  grafana:
    image: grafana/grafana:12.1.1
    container_name: monitoring_grafana
    restart: unless-stopped
    user: ${NAS_UID:?}:${NAS_GID:?}
    networks:
      - default
      - proxy
    environment:
      TZ: ${TZ:?}
      GF_SERVER_DOMAIN: grafana.${ROOT_DOMAIN:?}
      GF_SERVER_ROOT_URL: https://grafana.${ROOT_DOMAIN:?}/
      GF_SERVER_SERVE_FROM_SUB_PATH: false
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET:?}
      INFLUXDB_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN:?}
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    labels:
      traefik.enable: true
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
    depends_on:
      init:
        condition: service_completed_successfully
      influxdb:
        condition: service_healthy

  telegraf:
    build:
      context: .docker
      dockerfile: telegraf.dockerfile
    container_name: monitoring_telegraf
    restart: unless-stopped
    user: telegraf
    privileged: true #for smartctl
    networks:
      - default
      - readonly-docker-socket
    environment:
      INFLUXDB_ORG: ${INFLUXDB_ORG:?}
      INFLUXDB_BUCKET: ${INFLUXDB_BUCKET:?}
      INFLUXDB_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN:?}
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /:/hostfs:ro
    depends_on:
      influxdb:
        condition: service_healthy

  # https://hub.docker.com/_/influxdb/tags
  # https://github.com/influxdata/influxdb/releases
  influxdb:
    image: influxdb:2.7.12
    container_name: monitoring_influxdb
    restart: unless-stopped
    user: ${NAS_UID:?}:${NAS_GID:?}
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG:?}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET:?}
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME:?}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD:?}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_ADMIN_TOKEN:?}
      DOCKER_INFLUXDB_INIT_RETENTION: 7d
    volumes:
      - ./influxdb/data:/var/lib/influxdb2
      - ./influxdb/config:/etc/influxdb2
    labels:
      wud.watch: true
      wud.watch.digest: true
      wud.tag.include: ^v?\d+\.\d+\.\d+$$
    depends_on:
      init:
        condition: service_completed_successfully
    healthcheck:
      test: curl -f http://localhost:8086/ping
      interval: 5s
      timeout: 10s
      retries: 5

networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: br-${COMPOSE_PROJECT_NAME:?}
  proxy:
    external: true
  readonly-docker-socket:
    external: true
