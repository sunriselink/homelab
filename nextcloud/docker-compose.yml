services:
  init:
    image: alpine
    entrypoint: install -d -o ${NAS_UID:?} -g ${NAS_GID:?} -m 770
    volumes:
      - ./:/tmp/nextcloud
      - ${PATH_TO_FILES:?}:/tmp/files
    command:
      - /tmp/nextcloud/data
      - /tmp/nextcloud/config
      - /tmp/nextcloud/custom_apps
      - /tmp/nextcloud/themes
      - /tmp/nextcloud/postgres_data
      - /tmp/files/nextcloud

  # https://hub.docker.com/_/nextcloud/tags
  nextcloud:
    image: nas/nextcloud
    build:
      context: .docker
      dockerfile: nextcloud.dockerfile
    container_name: nextcloud
    restart: unless-stopped
    user: ${NAS_UID:?}:${NAS_GID:?}
    networks:
      - default
      - proxy
    environment:
      TZ: ${TZ:?}
      POSTGRES_HOST: nextcloud_db
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME:?}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER:?}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD:?}
    volumes:
      - ./data:/var/www/html
      - ./config:/var/www/html/config
      - ./custom_apps:/var/www/html/custom_apps
      - ./themes:/var/www/html/themes
      - ${PATH_TO_FILES:?}/nextcloud:/var/www/html/data
    labels:
      traefik.enable: true
      traefik.http.routers.nextcloud.entrypoints: local-secure,external-secure
      traefik.http.routers.nextcloud.rule: Host(`nextcloud.${ROOT_DOMAIN:?}`)
      traefik.http.routers.nextcloud.middlewares: nextcloud_redirectregex@docker
      traefik.http.services.nextcloud.loadbalancer.server.port: 80
      traefik.http.middlewares.nextcloud_redirectregex.redirectregex.permanent: true
      traefik.http.middlewares.nextcloud_redirectregex.redirectregex.regex: https://(.*)/.well-known/(?:card|cal)dav
      traefik.http.middlewares.nextcloud_redirectregex.redirectregex.replacement: https://$${1}/remote.php/dav
    depends_on:
      init:
        condition: service_completed_successfully
      nextcloud_db:
        condition: service_healthy

  # https://hub.docker.com/_/postgres/tags
  nextcloud_db:
    image: postgres:17
    container_name: nextcloud_db
    user: ${NAS_UID:?}:${NAS_GID:?}
    restart: unless-stopped
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      POSTGRES_DB: ${NEXTCLOUD_DB_NAME:?}
      POSTGRES_USER: ${NEXTCLOUD_DB_USER:?}
      POSTGRES_PASSWORD: ${NEXTCLOUD_DB_PASSWORD:?}
    depends_on:
      init:
        condition: service_completed_successfully
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "${NEXTCLOUD_DB_NAME:?}",
          "-U",
          "${NEXTCLOUD_DB_USER:?}",
        ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s

networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: br-${COMPOSE_PROJECT_NAME:?}
  proxy:
    external: true
